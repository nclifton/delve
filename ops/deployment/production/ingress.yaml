apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
    name: rabbitmq-ingress
    namespace: rabbitmq
    annotations:
        kubernetes.io/ingress.class: alb
        alb.ingress.kubernetes.io/scheme: internet-facing
        alb.ingress.kubernetes.io/certificate-arn: arn:aws:acm:ap-southeast-2:775272671334:certificate/ae7b9801-4f3c-48de-a67a-0f3f599703ac
        alb.ingress.kubernetes.io/actions.ssl-redirect: '{"Type": "redirect", "RedirectConfig": { "Protocol": "HTTPS", "Port": "443", "StatusCode": "HTTP_301"}}'
        alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 80}, {"HTTPS":443}]'
        alb.ingress.kubernetes.io/success-codes: "200,404"
        alb.ingress.kubernetes.io/target-type: ip
    labels:
        app: rabbitmq
spec:
    rules:
        - http:
              paths:
                  - path: /*
                    backend:
                        serviceName: ssl-redirect
                        servicePort: use-annotation
        - host: rabbitmq-management.tp.mtmo.io
          http:
              paths:
                  - path: /*
                    backend:
                        serviceName: rabbitmq
                        servicePort: 15672
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
    name: redis-commander-ingress
    namespace: redis
    annotations:
        kubernetes.io/ingress.class: alb
        alb.ingress.kubernetes.io/scheme: internet-facing
        alb.ingress.kubernetes.io/certificate-arn: arn:aws:acm:ap-southeast-2:775272671334:certificate/8725844d-d1bb-4285-80af-fdba01970134
        alb.ingress.kubernetes.io/actions.ssl-redirect: '{"Type": "redirect", "RedirectConfig": { "Protocol": "HTTPS", "Port": "443", "StatusCode": "HTTP_301"}}'
        alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 80}, {"HTTPS":443}]'
        alb.ingress.kubernetes.io/success-codes: "200,404"
    labels:
        app: redis-commander
spec:
    rules:
        - http:
              paths:
                  - path: /*
                    backend:
                        serviceName: ssl-redirect
                        servicePort: use-annotation
        - host: redis-commander.tp.mtmo.io
          http:
              paths:
                  - path: /*
                    backend:
                        serviceName: redis-commander
                        servicePort: 8081
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
    name: pgadmin-ingress
    namespace: pgadmin
    annotations:
        kubernetes.io/ingress.class: alb
        alb.ingress.kubernetes.io/scheme: internet-facing
        alb.ingress.kubernetes.io/certificate-arn: arn:aws:acm:ap-southeast-2:775272671334:certificate/5a3160c3-7c7e-4790-92e5-b10729fa19b4
        alb.ingress.kubernetes.io/actions.ssl-redirect: '{"Type": "redirect", "RedirectConfig": { "Protocol": "HTTPS", "Port": "443", "StatusCode": "HTTP_301"}}'
        alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 80}, {"HTTPS":443}]'
        alb.ingress.kubernetes.io/success-codes: "200,404"
        alb.ingress.kubernetes.io/target-type: ip
    labels:
        app: pgadmin
spec:
    rules:
        - http:
              paths:
                  - path: /*
                    backend:
                        serviceName: ssl-redirect
                        servicePort: use-annotation
        - host: pgadmin.tp.mtmo.io
          http:
              paths:
                  - path: /*
                    backend:
                        serviceName: pgadmin-pgadmin4
                        servicePort: 80
