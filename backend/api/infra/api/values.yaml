# The subchart contains default values which can be overridden here
k8sServiceChart:
  name: api
  # Component is the group of services (domain) the service belongs to
  component: api
  namespace: tp
  # Harness can create a namespace if not exists so this is set to true in Harness.
  # Helm install will error if the namespace already exists so set this to false
  # and create the namespace first in deploy_services.sh when manually deploying.
  createNamespace: ${environmentVariable.createNamespace}
  replicas: 2

  image:
    repository: 006764518182.dkr.ecr.ap-southeast-2.amazonaws.com
    tag: ${artifact.buildNo}

  podLabels:
    # env label required for New Relic integration
    env: ${env.name}

  #podAnnotations:

  # Possible values for ServiceType are: ClusterIP | NodePort | LoadBalancer | ExternalName
  serviceType: NodePort
  servicePort: 10000
  # For Headless Services (e.g. RabbitMQ Consumers) 
  # uncomment the below and ignore serviceType, servicePort and serviceTargetPort
  #serviceClusterIP: None

  # Cluster Ingress
  ingress:
    enabled: true
    # Add ingress rules (cluster ingress endpoints) as a list below
    rules:
      - host: "api.${environmentVariable.dns}"
        path: /*

  # HorizontalPodAutoscaler
  hpa:
    enabled: false
    minReplicas: 6
    maxReplicas: 12
    cpuTargetAverageUtilization: 80
    memoryTargetAverageUtilization: 80

  # Pod resource limits
  resourceLimits:
    cpu: 80m
    memory: 256Mi
  resourceRequests:
    cpu: 80m
    memory: 256Mi

  # Flag to turn on/off the exposing of the contianer port and liveness and readiness probes
  # TODO: Remove this flag once all services have liveness and readiness endpoints
  exposePorts: true

  # Liveness Probe configuration
  livenessProbe:
    httpGet: false
    path: /
    initialDelaySeconds: 60
    periodSeconds: 60
    successThreshold: 1
    timeoutSeconds: 1

  # Readiness Probe configuration
  readinessProbe:
    httpGet: false
    path: /
    failureThreshold: 3
    periodSeconds: 10
    successThreshold: 1
    timeoutSeconds: 1

  # Specify all environment variables to be added to the container.
  env:
    config:
      CONTAINER_NAME: "api"
      ACCOUNT_RPC_ADDRESS: "account-rpc-service:10001"
      SMS_RPC_ADDRESS: "sms-rpc-service:10009"
      MMS_RPC_ADDRESS: "mms-rpc-service:10007"
      WEBHOOK_RPC_ADDRESS: "webhook-rpc-service:10002"
      SENDER_RPC_ADDRESS: "sender-rpc-service:10015"
